*barbar.txt*	Nvim


		  barbar.vim    by Rom Grk


Help on barbar.vim   			         		*barbar*

1. Intro                        |barbar-intro|
2. Mappings & Commands          |barbar-mappings| |barbar-commands|
3. Highlights                   |barbar-highlights|
4. Settings                     |barbar-settings|

==============================================================================
1. Intro  					          *barbar-intro*

Barbar is a tabline plugin. It's called Barbar because it deals with the bar
at the top of your window. And it does it well so it's more than a bar. Barbar.

==============================================================================
2. Mappings & Commands	               *barbar-mappings* *barbar-commands*

The plugin doesn't provide default mappings as there isn't any standard. The
list below is the mappings I use.

The name of each command should be descriptive enough for you to use it.

>
   " Magic buffer-picking mode
   nnoremap <silent>      C-s> :BufferPick<CR>

   " Sort automatically by...
   nnoremap <silent> <Space>bd :BufferOrderByDirectory<CR>
   nnoremap <silent> <Space>bl :BufferOrderByLanguage<CR>

   " Next/previous
   nnoremap <silent>    <A-,> :BufferPrevious<CR>
   nnoremap <silent>    <A-.> :BufferNext<CR>
   nnoremap <silent>    <A-<> :BufferMovePrevious<CR>
   nnoremap <silent>    <A->> :BufferMoveNext<CR>

   " Goto
   nnoremap <silent>    <A-1> :BufferGoto 1<CR>
   nnoremap <silent>    <A-2> :BufferGoto 2<CR>
   nnoremap <silent>    <A-3> :BufferGoto 3<CR>
   nnoremap <silent>    <A-4> :BufferGoto 4<CR>
   nnoremap <silent>    <A-5> :BufferGoto 5<CR>
   nnoremap <silent>    <A-6> :BufferGoto 6<CR>
   nnoremap <silent>    <A-7> :BufferGoto 7<CR>
   nnoremap <silent>    <A-8> :BufferGoto 8<CR>
   nnoremap <silent>    <A-9> :BufferLast<CR>
<

==============================================================================
3. Highlights	                                          *barbar-highlights*
~

Here are the groups that you should define if you'd like to style Barbar.

>
   " For the current active buffer
   hi default link BufferCurrent      Normal
   " For the current active buffer when modified
   hi default link BufferCurrentMod   Normal
   " For the current active buffer icon
   hi default link BufferCurrentSign  Normal
   " For the current active buffer target when buffer-picking
   exe 'hi default BufferCurrentTarget   guifg=red gui=bold guibg=' . bg_current

   " For buffers visible but not the current one
   hi default link BufferVisible      TabLineSel
   hi default link BufferVisibleMod   TabLineSel
   hi default link BufferVisibleSign  TabLineSel
   exe 'hi default BufferVisibleTarget   guifg=red gui=bold guibg=' . bg_visible

   " For buffers invisible buffers
   hi default link BufferInactive     TabLine
   hi default link BufferInactiveMod  TabLine
   hi default link BufferInactiveSign TabLine
   exe 'hi default BufferInactiveTarget   guifg=red gui=bold guibg=' . bg_inactive

   " For the shadow in buffer-picking mode
   hi BufferShadow guifg=#ffffff guibg=#000000
<

==============================================================================
4. Settings                                                 *barbar-settings*
~

							*g:bufferline.shadow*
`g:bufferline.shadow`		boolean	(default v:true)

	Enables the shadow when entering buffer-picking mode.

							*g:bufferline.icons*
`g:bufferline.icons`		boolean	(default v:true)

	Controls if icons are rendered on each tab.

							*g:bufferline.closable*
`g:bufferline.closable`		boolean	(default v:true)

	Controls if close buttons are shown.

					    *g:bufferline.semantic_letters*
`g:bufferline.semantic_letters`		boolean	(default v:true)

	If set, the letters for each buffer in buffer-pick mode will be
	assigned based on their name. Otherwise or in case all letters are
	already assigned, the behavior is to assign letters in order of
	usability (see order just below)

					             *g:bufferline.letters*
`g:bufferline.letters`			string	(default
		     'asdfjkl;ghnmxcbziowerutyqpASDFJKLGHNMXCBZIOWERUTYQP')

	New buffer letters are assigned in this order. This order is
	optimal for the qwerty keyboard layout but might need adjustement
	for other layouts.
>
        let g:bufferline.letters = 
	  \ 'asdfjkl;ghnmxcbziowerutyqpASDFJKLGHNMXCBZIOWERUTYQP'
<

					           *g:bufferline.clickable*
`g:bufferline.clickable`		boolean	(default v:true)

	If set, you can left-click on a tab to switch to that buffer, and
	middle-click to delete it.
>
        let g:bufferline.clickable = v:true
<

					           *g:bufferline.maximum_padding*
`g:bufferline.maximum_padding`		int	(default 4)

	Sets the maximum padding width with which to surround each tab
>
        let g:bufferline.maximum_padding = 4
<


 vim:tw=78:ts=8:ft=help:norl:
